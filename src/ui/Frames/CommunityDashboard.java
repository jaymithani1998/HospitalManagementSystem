/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.Frames;

import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import main.Main;
import model.entities.Community;
import ui.AdminDashboard;
import util.Utility;

/**
 *
 * @author jaymithani
 */
public class CommunityDashboard extends javax.swing.JFrame {

    /**
     * Creates new form CommunityDashboard
     */
    public CommunityDashboard() {
        initComponents();
        populateComboBoxCity();
        populateAdminComboBox();
        populateTable();
        lblDelete.setVisible(false);

    }

    private void resetForm() {
        txtCommunityName.setText("");
        txtCommunityZipcode.setText("");
        comboBoxAdmin.setSelectedIndex(0);
        comboBoxCity.setSelectedIndex(0);
        lblId.setText("");
    }

    public void populateComboBoxCity() {
        String[] cityNames = Main.cityDirectory.getCitiesForComboBox();
        DefaultComboBoxModel model = new DefaultComboBoxModel(cityNames);
        comboBoxCity.setModel(model);
    }

    public void populateAdminComboBox() {
        String[] comAdmins = Main.pDirectory.getAdminsForCommunitiesAdminComboBox();
        DefaultComboBoxModel model = new DefaultComboBoxModel(comAdmins);
        comboBoxAdmin.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DashboardLeftPanel = new javax.swing.JPanel();
        txtSearchField = new javax.swing.JTextField();
        tableView = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        lblDelete = new javax.swing.JButton();
        DashboardRightPanel = new javax.swing.JPanel();
        txtCommunityName = new javax.swing.JTextField();
        lblCommunityName = new javax.swing.JLabel();
        lblCommunityAdmin = new javax.swing.JLabel();
        lblCommunityCity = new javax.swing.JLabel();
        lblCommunityZipcode = new javax.swing.JLabel();
        txtCommunityZipcode = new javax.swing.JTextField();
        comboBoxCity = new javax.swing.JComboBox<>();
        comboBoxAdmin = new javax.swing.JComboBox<>();
        lblId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DashboardLeftPanel.setBackground(new java.awt.Color(0, 153, 153));

        txtSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchFieldKeyReleased(evt);
            }
        });

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Community", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewMouseClicked(evt);
            }
        });
        tableView.setViewportView(tblView);

        btnUpdate.setText("Add/Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        lblDelete.setText("Delete");
        lblDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DashboardLeftPanelLayout = new javax.swing.GroupLayout(DashboardLeftPanel);
        DashboardLeftPanel.setLayout(DashboardLeftPanelLayout);
        DashboardLeftPanelLayout.setHorizontalGroup(
            DashboardLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardLeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DashboardLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchField)
                    .addComponent(tableView, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(DashboardLeftPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DashboardLeftPanelLayout.setVerticalGroup(
            DashboardLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardLeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableView, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DashboardLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnBack1)
                    .addComponent(lblDelete))
                .addGap(29, 29, 29))
        );

        DashboardRightPanel.setBackground(new java.awt.Color(0, 153, 153));

        txtCommunityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCommunityNameActionPerformed(evt);
            }
        });

        lblCommunityName.setForeground(new java.awt.Color(255, 255, 255));
        lblCommunityName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCommunityName.setText("Community");

        lblCommunityAdmin.setForeground(new java.awt.Color(255, 255, 255));
        lblCommunityAdmin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCommunityAdmin.setText("Admin");

        lblCommunityCity.setForeground(new java.awt.Color(255, 255, 255));
        lblCommunityCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCommunityCity.setText("City");

        lblCommunityZipcode.setForeground(new java.awt.Color(255, 255, 255));
        lblCommunityZipcode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCommunityZipcode.setText("Zipcode");

        txtCommunityZipcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCommunityZipcodeActionPerformed(evt);
            }
        });

        comboBoxCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCityActionPerformed(evt);
            }
        });

        lblId.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout DashboardRightPanelLayout = new javax.swing.GroupLayout(DashboardRightPanel);
        DashboardRightPanel.setLayout(DashboardRightPanelLayout);
        DashboardRightPanelLayout.setHorizontalGroup(
            DashboardRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardRightPanelLayout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(DashboardRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(DashboardRightPanelLayout.createSequentialGroup()
                        .addComponent(lblCommunityZipcode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCommunityZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardRightPanelLayout.createSequentialGroup()
                        .addComponent(lblCommunityCity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardRightPanelLayout.createSequentialGroup()
                        .addGroup(DashboardRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCommunityName)
                            .addComponent(lblCommunityAdmin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DashboardRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCommunityName, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(comboBoxAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(54, 54, 54))
            .addGroup(DashboardRightPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DashboardRightPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCommunityAdmin, lblCommunityCity, lblCommunityName, lblCommunityZipcode});

        DashboardRightPanelLayout.setVerticalGroup(
            DashboardRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardRightPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DashboardRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunityName)
                    .addComponent(txtCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DashboardRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunityAdmin)
                    .addComponent(comboBoxAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DashboardRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCommunityCity)
                    .addComponent(comboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DashboardRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunityZipcode)
                    .addComponent(txtCommunityZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(369, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DashboardLeftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DashboardRightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DashboardRightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DashboardLeftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            if(txtCommunityName.getText().equals("") || txtCommunityZipcode.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Fields cannot be blank!");
            }
            else if(!Utility.isOnlyAlphabets(txtCommunityName.getText())){
                JOptionPane.showMessageDialog(null, "Incorrect Community Name format!(only alphabets allowed)");
            }
            else if(!Utility.isOnlyNumeric(txtCommunityZipcode.getText())){
                JOptionPane.showMessageDialog(null, "Incorrect Zipcode format (only numbers allowed)");
            }
            else{
                Community c = new Community();
            //       c.setAdmin(txtCommunityAdmin.getText());
            c.setName(txtCommunityName.getText());
            c.setCityName(comboBoxCity.getSelectedItem().toString().split(":", 2)[0]);
            c.setCityId(comboBoxCity.getSelectedItem().toString().split(":", 2)[1]);
            c.setZipcode(Integer.parseInt(txtCommunityZipcode.getText()));
            c.setAdmin(comboBoxAdmin.getSelectedItem().toString().split(":", 2)[1]);

            if (lblId.getText().isEmpty()) {
                Main.comDircetDirectory.addCommunity(c);
            } else {
                c.setId(lblId.getText());
                Main.comDircetDirectory.updateCommunity(c);
            }

            populateTable();
            resetForm();
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtCommunityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCommunityNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCommunityNameActionPerformed

    private void txtCommunityZipcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCommunityZipcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCommunityZipcodeActionPerformed

    private void comboBoxCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCityActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        new AdminDashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void tblViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewMouseClicked
        int SelectRowIndex = tblView.getSelectedRow();

        if (SelectRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view or update details");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblView.getModel();
        String id = model.getValueAt(SelectRowIndex, 0).toString();

        HashMap<String, Community> h = Main.comDircetDirectory.getDirectory();

        txtCommunityName.setText(h.get(id).getName());
        txtCommunityZipcode.setText(String.valueOf(h.get(id).getZipcode()));
        String adminId = h.get(id).getAdmin();
//        System.out.println("admin id" + adminId);
        String adminName = Main.pDirectory.getDirectory().get(adminId).getName();
        comboBoxAdmin.setSelectedItem(adminName + ":" + adminId);
        comboBoxCity.setSelectedItem(h.get(id).getCityName());
        lblId.setText(id);
    }//GEN-LAST:event_tblViewMouseClicked

    private void txtSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchFieldKeyReleased
        DefaultTableModel model = (DefaultTableModel)tblView.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tblView.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtSearchField.getText().trim()));
    }//GEN-LAST:event_txtSearchFieldKeyReleased

    private void lblDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblDeleteActionPerformed
        // TODO add your handling code here:
        int SelectRowIndex = tblView.getSelectedRow();
        
        
        if(SelectRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete record");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblView.getModel();
        String id = model.getValueAt(SelectRowIndex, 0).toString();
        
        Main.comDircetDirectory.deleteCommunity(id);
        
        JOptionPane.showMessageDialog(this, "Community details deleted");
        
        resetForm();
        populateTable();
    }//GEN-LAST:event_lblDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CommunityDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CommunityDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CommunityDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CommunityDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CommunityDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DashboardLeftPanel;
    private javax.swing.JPanel DashboardRightPanel;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboBoxAdmin;
    private javax.swing.JComboBox<String> comboBoxCity;
    private javax.swing.JLabel lblCommunityAdmin;
    private javax.swing.JLabel lblCommunityCity;
    private javax.swing.JLabel lblCommunityName;
    private javax.swing.JLabel lblCommunityZipcode;
    private javax.swing.JButton lblDelete;
    private javax.swing.JLabel lblId;
    private javax.swing.JScrollPane tableView;
    private javax.swing.JTable tblView;
    private javax.swing.JTextField txtCommunityName;
    private javax.swing.JTextField txtCommunityZipcode;
    private javax.swing.JTextField txtSearchField;
    // End of variables declaration//GEN-END:variables
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblView.getModel();
        model.setRowCount(0);
        HashMap<String, Community> comDir = Main.comDircetDirectory.getDirectory();
        for (String id : comDir.keySet()) {
            Object[] row = new Object[3];
            Community c = comDir.get(id);
            row[0] = c.getId();
            row[1] = c.getName();
            row[2] = c.getCityName();
            model.addRow(row);
        }
    }
}
